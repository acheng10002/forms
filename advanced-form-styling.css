/* input {
    appearance: none;
}

/* disables the default appearance */
input[type="search"] {
    appearance: none;
}

span {
    display: inline-block;
    background: red;
}

input[type="checkbox"] {
    appearance: none;
}
  
input[type="checkbox"] {
    position: relative;
    width: 1em;
    height: 1em;
    border: 1px solid gray;
    /* Adjusts the position of the checkboxes on the text baseline */
    vertical-align: -2px;
    /* Set here so that Windows' High-Contrast Mode can override */
    color: green;
}
  
input[type="checkbox"]::before {
    content: "✔";
    position: absolute;
    font-size: 1.2em;
    right: -1px;
    top: -0.3em;
    visibility: hidden;
}

/* use :checked and :disabled pseudo-classes to change the appearance of my custom checkbox as its state changes */
input[type="checkbox"]:checked::before {
    /* Use `visibility` instead of `display` to avoid recalculating layout */
    visibility: visible;
}
  
input[type="checkbox"]:disabled {
    border-color: black;
    background: #ddd;
    color: gray;
}

/* styling to make sizing consistent, uniform styling of things like background-colors, and use of appearance 
   to get rid of some system-level styling 

body {
  font-family: "Josefin Sans", sans-serif;
  margin: 20px auto;
  max-width: 400px;
}

form > div {
  margin-bottom: 20px;
}

select {
  appearance: none;
  width: 100%;
  height: 100%;
}

.select-wrapper {
  position: relative;
}

.select-wrapper::after {
  content: "▼";
  font-size: 1rem;
  top: 3px;
  right: 10px;
  position: absolute;
}

/* global normalizing CSS to all the controls and their labels to get them to size in the same way, 
   adopt their parent font, etc. 
button,
label,
input,
select,
progress,
meter {
  display: block;
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  box-sizing: border-box;
  width: 100%;
  padding: 5px;
  height: 30px;
}

/* uniform shadow and rounded corners to the controls 
input[type="text"],
input[type="datetime-local"],
input[type="color"],
select {
  box-shadow: inset 1px 1px 3px #ccc;
  border-radius: 5px;
}

label {
  margin-bottom: 5px;
}

button {
  width: 60%;
  margin: 0 auto;
}   
*/

/* the select's arrow that indicates it is a dropdown differs across browsers */
select {
  appearance: none;
}

.select-wrapper {
    position: relative;
}
  
.select-wrapper::after {
    content: "▼";
    font-size: 1rem;
    top: 6px;
    right: 10px;
    position: absolute;
}

input[type="range"] {
    appearance: none;
    background: red;
    height: 2px;
    padding: 0;
    outline: 1px solid transparent;
}
/* I can remove the border on the block of solid color */
input[type="color"] {
    border: 0;
    padding: 0;
}

/* first hide the actual form input */
input[type="file"] {
    height: 0;
    padding: 0;
    opacity: 0;
}

/* style the label to act like a button, which when pressed will open the file picker as expected */
label[for="file"] {
    box-shadow: 1px 1px 3px #ccc;
    background: linear-gradient(to bottom, #eee, #ccc);
    border: 1px solid rgb(169, 169, 169);
    border-radius: 5px;
    text-align: center;
    line-height: 1.5;
  }
  
label[for="file"]:hover {
    background: linear-gradient(to bottom, #fff, #ddd);
}
  
label[for="file"]:active {
    box-shadow: inset 1px 1px 3px #ccc;
}
